from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
)

main_menu = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text="–£—á–∏—Ç—å —Å–ª–æ–≤–∞")],
                                          [KeyboardButton(text="–î—É—ç–ª—å —Å–ª–æ–≤")],
                                          [KeyboardButton(text="–ü—Ä–æ–≥—Ä–µ—Å—Å")],
                                          [KeyboardButton(text="–†–µ–π—Ç–∏–Ω–≥")],
                                          [KeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏")]],
                                resize_keyboard=True)

choose_grade_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="Easy", callback_data="grade_Easy")],
        [InlineKeyboardButton(text="Intermediate",
                              callback_data="grade_Intermediate")],
        [InlineKeyboardButton(text="Advanced", callback_data="grade_Advanced")]
    ])


async def choose_training_length_keyboard():
    buttons = [
        InlineKeyboardButton(text=str(i), callback_data=f"training_length_{i}")
        for i in range(10, 51, 5)
    ]
    keyboard = [buttons[i:i + 3] for i in range(0, len(buttons), 3)]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


async def start_training_keyboard(grade):
    return InlineKeyboardMarkup(row_width=2, inline_keyboard=[[
        InlineKeyboardButton(text="‚ñ∂Ô∏è", callback_data=f"start_training_{grade}"),
        InlineKeyboardButton(text="üîÑ", callback_data="repeat_words")]])


async def navigation_keyboard(start_index):
    keyboard = [InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data="back_words"),
                InlineKeyboardButton(text="‚û°Ô∏è", callback_data="next_words")]
    return InlineKeyboardMarkup(
        row_width=2,
        inline_keyboard=[keyboard if start_index != 0 else [keyboard[1]]])


async def show_training_word_keyboard(word, options):
    keyboard = InlineKeyboardMarkup(row_width=2, inline_keyboard=[
        [InlineKeyboardButton(
            text=option,
            callback_data=f"answer_{word}_{option}"
        )
            for option in
            options[:2]],
        [InlineKeyboardButton(
            text=option,
            callback_data=f"answer_{word}_{option}"
        )
            for option in
            options[2:4]],
        [InlineKeyboardButton(
            text=option,
            callback_data=f"answer_{word}_{option}"
        )
            for option in
            options[4:6]],
        [InlineKeyboardButton(
            text=option,
            callback_data=f"answer_{word}_{option}"
        )
            for option in
            options[6:8]],
        [InlineKeyboardButton(
            text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å–ª–æ–≤–æ",
            callback_data=f"answer_{word}_unknown"
        )],
        [InlineKeyboardButton(
            text="–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É",
            callback_data="finish_training"
        )],
        [InlineKeyboardButton(
            text="–°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ",
            callback_data=f"report_error_{word}"
        )]
    ])
    return keyboard


async def notification_interval_keyboard():
    buttons = [
        InlineKeyboardButton(text=str(i),
                             callback_data=f"notification_interval_{i}")
        for i in range(2, 25, 2)
    ]
    keyboard = [buttons[i:i + 4] for i in range(0, len(buttons), 4)]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)
